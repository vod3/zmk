#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT  0
#define SYMBOLS  1
#define NUMARROW 2
#define WM       3
#define QWERTY   4

#define U_TAPPING_TERM 200


/ {

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		scroll_mode: scroll_mode {
    		compatible = "zmk,behavior-hold-tap";
			label = "Scroll Mode Layer Toggle";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			flavor = "hold-preferred";
			bindings = <&mo WM>;
		};
    };

    /**
     * Temporarily switches to a layer (`&mo`) while a modifier is held.
     * Analogous to QMK's `LM()`, using a parameterized macro.
     *
     * Params:
     *  1. Layer to switch to
     *  2. Modifier to press while layer is active
     *
     * Example:
     *  `&lm NUM_LAYER LSHIFT`
     */
    lm: lm {
        compatible = "zmk,behavior-macro-two-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <2>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &mo MACRO_PLACEHOLDER>
            , <&macro_param_2to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>
            , <&macro_pause_for_release>
            , <&macro_param_2to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>
            , <&macro_param_1to1>
            , <&macro_release &mo MACRO_PLACEHOLDER>
            ;
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
            &lt 2 TAB     &kp V         &kp DOT        &kp O            &kp U             &kp RA(A)      &kp Q          &kp G          &kp L          &kp H         &kp F         &kp J
            &kp ESC       &u_mt LGUI C  &u_mt LALT A   &u_mt LSHFT E    &u_mt LCTRL I     &kp Y          &kp B          &u_mt LCTRL T  &u_mt LSHFT R  &u_mt LALT N  &u_mt LGUI S  &kp RA(S)
            &kp LSHFT     &kp Z         &kp X          &kp COMMA        &kp RA(U)         &kp RA(O)      &kp P          &kp D          &kp W          &kp M         &kp K         &tog QWERTY
                                                       &kp TAB          &lt 2 SPACE       &lm 3 LGUI     &kp BACKSPACE  &lt 1 RETURN
            >;
        };
        symbol_layer {
            label = "SYMBOLS";
            bindings = <
            &none   &kp AT     &kp PRCNT   &kp LBRC   &kp RBRC   &kp CARET          &kp EXCL   &kp LT     &kp GT     &kp EQUAL   &kp AMPS   &kp F11
            &none   &kp PIPE2  &kp GRAVE   &kp LPAR   &kp RPAR   &kp STAR           &kp QMARK  &kp SLASH  &kp COLON  &kp MINUS   &kp UNDER  &none
            &none   &none      &kp HASH    &kp LBKT   &kp RBKT   &kp TILDE          &kp PLUS   &kp DQT    &kp SQT    &kp NUBS    &kp SEMI   &kp KP_DOT
                                           &trans     &trans     &trans             &none      &none
            >;
        };

        numarrow_layer {
            label = "NUMARROW";
            bindings = <
            &none  &none  &kp N1   &kp N2   &kp N3   &none             &none  &none     &none     &none   &none      &none
            &none  &none  &kp N4   &kp N5   &kp N6   &none             &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none
            &none  &none  &kp N7   &kp N8   &kp N9   &kp N0            &none  &none     &none     &none   &none      &none
                                    &none   &none    &none             &none            &none
            >;
        };

        wm_layer {
            label = "WM";
            bindings = <
			&trans &trans &kp N1 &kp N2 &kp N3 &trans        &trans &trans    &trans    &trans   &trans     &trans 
            &trans &trans &trans &trans &trans &trans        &trans &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans
			&trans &trans &trans &trans &trans &trans        &trans &trans    &trans    &trans   &trans     &trans 
			&trans &trans &trans &trans &trans &trans        &trans &trans    &trans    &trans   &trans     &trans 
			&trackball_scroll_x &trackball_scroll_y

            >;
        };

		qwerty_layer {
			label = "QWERTY";
			bindings = <
            &none   &none     &none    &kp W    &none      &none       &none         &none     &none     &none   &none      &none
            &kp TAB &kp LCTRL &kp A    &kp S    &kp D      &none       &none         &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none
            &none   &none     &none    &none    &none      &none       &none         &none     &none     &none   &none      &trans
                                       &none    &kp SPACE  &kp LSHIFT  &none         &none
			>;
		};

    };
};
